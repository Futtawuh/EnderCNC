# E3CNC macros for workspace XYZ0 positioning

# What the macros do and why: 
#---------------------------------------------
# These macros are to manually set the workspace XYZ0 for any basic milling.
# When you use a "ZERO" macro, it saves your machines "original" position into a variables file. 
# This was done in case of MCU failure, E-stop needs to be pressed or any other reason for the machine to need a firmware reset.
# This removes the need to take notes of the XYZ position before hitting ZERO macros. 


# ! FAILED MID JOB AND FIRMWARE IS RESTARTED !
# NOTE! The following scenario will only work as long as you dont swap out the workpiece for a new one, wanting to try and save the failed job.  
# Scenario: You are in the middle of the job and the MCU crashes, causing a firmware restart. After a firmware restart, you can simply press the "LOAD_OFFSETS" macro
# and the machine will re-home, and go to its last originally saved machine position. From here you can simply press the "ZERO_ALL" macro and the machine sets the workspace XYZ0 to where it was before. 
# You can now restart the original job and might just save your workpiece from being scraps. 

# My manual workpiece ZERO position setup:
# !MAKE SURE THE DREMEL/SPINDLE IS NOT SPINNING!
#-------------------------------------------------
# 1. Attach the workpiece
# 2. Home the CNC
# 3. Move the CNC via mainsail until the bit is ~ at the center of the workpiece.
# 4. Move Z down until ~1mm above the workpiece. 
# 5. Take a thin piece of paper under the bit, move it back and forth while lowering Z, when the bit bites 
# the paper(slight friction), click ZERO_Z macro. Z is now at workpiece Z0.
# 6. Move Z up ~2-3mm or more to avoid crashing if the workpiece is not flat. 
# 7. Move the CNC from mainsail using XY movement to be above the corner you set as origin point in Fusion/CAM.
# 8. Click the ZERO_X and ZERO_Y macro. X and Y is now at workpiece XY0. (dont do Z macro as you already did that)
# 9. Start the job as normal from mainsail. Dont crash, use PPE and be safe.   

[gcode_macro ZERO_X] # Sets workspace X0 position.
gcode: 
  SAVE_VARIABLE VARIABLE=x_offset VALUE={printer.gcode_move.position.x}
  RESPOND PREFIX="info" MSG="Saved X Offset - X={printer.gcode_move.position.x}"
  SET_KINEMATIC_POSITION X=0

[gcode_macro ZERO_Y] # Sets workspace Y0 position.
gcode: 
  SAVE_VARIABLE VARIABLE=y_offset VALUE={printer.gcode_move.position.y}
  RESPOND PREFIX="info" MSG="Saved Y Offset - Y={printer.gcode_move.position.y}"
  SET_KINEMATIC_POSITION Y=0

[gcode_macro ZERO_Z] # Sets workspace Z0 position.
gcode: 
  SAVE_VARIABLE VARIABLE=z_offset VALUE={printer.gcode_move.position.z}
  RESPOND PREFIX="info" MSG="Saved Z Offset - Z={printer.gcode_move.position.z}"
  SET_KINEMATIC_POSITION Z=0

[gcode_macro ZERO_ALL] # Sets workspace XYZ0 position. 
gcode:
  SAVE_VARIABLE VARIABLE=z_offset VALUE={printer.gcode_move.position.z}
  RESPOND PREFIX="info" MSG="Saved Z Offset - Z={printer.gcode_move.position.z}"
  SET_KINEMATIC_POSITION Z=0
  SAVE_VARIABLE VARIABLE=y_offset VALUE={printer.gcode_move.position.y}
  RESPOND PREFIX="info" MSG="Saved Y Offset - Y={printer.gcode_move.position.y}"
  SET_KINEMATIC_POSITION Y=0
  SAVE_VARIABLE VARIABLE=x_offset VALUE={printer.gcode_move.position.x}
  RESPOND PREFIX="info" MSG="Saved X Offset - X={printer.gcode_move.position.x}"
  SET_KINEMATIC_POSITION X=0


[gcode_macro LOAD_OFFSETS] # Homes the machine and goes back to the last coords where XYZ0 was set. 
gcode:
  G28
  {% set svv = printer.save_variables.variables %}
  G1 F3000 X{svv.x_offset} Y{svv.y_offset} Z{svv.z_offset}
 
  RESPOND PREFIX="warn" MSG="Loaded offsets, going to: X={svv.x_offset} Y={svv.y_offset} Z={svv.z_offset}"


[gcode_macro CHECK_OFFSET_XYZ] # Checks what coords are saved and prints them in console. (no movement)
gcode:
  {% set svv = printer.save_variables.variables %}
  RESPOND PREFIX="info" MSG="Current Saved Offset - X={svv.x_offset} Y={svv.y_offset} Z={svv.z_offset}"